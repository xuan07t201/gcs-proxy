# Environment configuration for Go GCS Proxy
# Copy this file to .env and update with your values

# Google Cloud Configuration
GOOGLE_CLOUD_PROJECT_ID=your-gcp-project-id
GCS_BUCKET_NAME=your-bucket-name

# Optional: Service Account Key File Path
# If not set, will use Application Default Credentials (ADC)
# For local development with service account key:
# GOOGLE_CLOUD_KEY_FILE=/path/to/your/service-account-key.json

# Server Configuration
PORT=8080

# Gin Mode (release, debug, test)
GIN_MODE=release

# Optional: CORS Configuration
# CORS_ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
# CORS_ALLOWED_METHODS=GET,HEAD,OPTIONS
# CORS_ALLOWED_HEADERS=Origin,Content-Type,Accept,Authorization,Cache-Control

# Optional: Cache Configuration
# CACHE_MAX_AGE=3600
# STATIC_CACHE_MAX_AGE=86400

# Optional: Security Headers
# HSTS_MAX_AGE=31536000
# CONTENT_SECURITY_POLICY=default-src 'self'

# Cloud Run Deployment Notes:
# - Set GOOGLE_CLOUD_PROJECT_ID to your GCP project
# - Set GCS_BUCKET_NAME to your bucket
# - Don't set GOOGLE_CLOUD_KEY_FILE (Cloud Run uses service account automatically)
# - Set GIN_MODE=release for production
# - PORT will be set automatically by Cloud Run

# Local Development with Docker:
# docker run --rm -p 8080:8080 --env-file .env \
#   -v /path/to/service-key.json:/etc/gcs-key.json \
#   -e GOOGLE_CLOUD_KEY_FILE=/etc/gcs-key.json \
#   gcs-proxy-go:latest